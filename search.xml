<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>我与地坛</title>
    <url>/posts/5914/</url>
    <content><![CDATA[<h1 id="我与地坛"><a href="#我与地坛" class="headerlink" title="我与地坛"></a>我与地坛</h1><h4 id="作者：史铁生"><a href="#作者：史铁生" class="headerlink" title="作者：史铁生"></a>作者：史铁生</h4><hr>
<p>​        我在好几篇小说中都提到过一座废弃的古园，实际就是地坛。</p>
<p>​        许多年前旅游业还没有开展，园子荒芜冷落得如同一片野地，很少被人记起。</p>
<p>​        地坛离我家很近。或者说我家离地坛很近。总之，只好认为这是缘分。地坛在我出生前四百多年就<br>座落在那儿了，而自从我的祖母年轻时带着我父亲来到北京，就一直住在离它不远的地方——五十多<br>年间搬过几次家，可搬来搬去总是在它周围，而且是越撤离它越近了。我常觉得这中间有着宿命的味<br>道：仿佛这古园就是为了等我，而历尽沧桑在那儿等待了四百多年。</p>
<p>​        它等待我出生，然后又等待我活到最狂妄的年龄上忽地残废了双腿。四百多年里，它一面剥蚀了古<br>殿檐头浮夸的琉璃，淡褪了门壁上炫耀的朱红，坍记了一段段高墙又散落了玉砌雕栏，祭坛四周的老柏<br>树愈见苍幽，到处的野草荒藤也都茂盛得自在坦荡。</p>
<p>​        这时候想必我是该来了。十五年前的一个下午，我摇着轮椅进入园中，它为一个失魂落魄的人把一<br>切都准备好了。那时，太阳循着亘古不变的路途正越来越大，也越红。在满园弥漫的沉静光芒中，一个<br>人更容易看到时间，并看见自己的身影。</p>
<p>​        自从那个下午我无意中进了这园子，就再没长久地离开过它。</p>
<p>​        我一下子就理解了它的意图。正如我在一篇小说中所说的：“在人口密聚的城市里，有这样一个宁<br>静的去处，像是上帝的苦心安排。”</p>
<p>​        两条腿残废后的最初几年，我找不到工作，找不到去路，忽然间几乎什么都找不到了，我就摇了轮<br>椅总是到它那儿去，仅为着那儿是可以逃避一个世界的另一个世界。我在那篇小说中写道：“没处可去<br>我便一天到晚耗在这园子里。跟上班下班一样，别人去上班我就摇了轮椅到这儿来。园子无人看管，上<br>下班时间有些抄近路的人们从园中穿过，园子里活跃一阵，过后便沉寂下来。”</p>
<p>​        “园墙在金晃晃的空气中斜切下—溜荫凉，我把轮椅开进去，把椅背放倒，坐着或是躺着，看书<br>或者想事，撅一杈树枝左右拍打，驱赶那些和我一样不明白为什么要来这世上的小昆虫。”“蜂儿如一<br>朵小雾稳稳地停在半空；蚂蚁摇头晃脑捋着触须，猛然间想透了什么，转身疾行而去；瓢虫爬得不耐烦<br>了，累了祈祷一回便支开翅膀，忽悠一下升空了；树干上留着一只蝉蜕，寂寞如一间空屋；露水在草叶<br>上滚动，聚集，压弯了草叶轰然坠地摔开万道金光。”</p>
<p>​        “满园子都是草木竟相生长弄出的响动，悉悉碎碎片刻不息。”这都是真实的记录，园子荒芜但并<br>不衰败。</p>
<p>​        除去几座殿堂我无法进去，除去那座祭坛我不能上去而只能从各个角度张望它，地坛的每一棵树下<br>我都去过，差不多它的每一米草地上都有过我的车轮印。无论是什么季节，什么天气，什么时间，我都<br>在这园子里呆过。有时候呆一会儿就回家，有时候就呆到满地上都亮起月光。记不清都是在它的哪些角<br>落里了。我一连几小时专心致志地想关于死的事，也以同样的耐心和方式想过我为什么要出生。这样想<br>了好几年，最后事情终于弄明白了：一个人，出生了，这就不再是一个可以辩论的问题，而只是上帝交<br>给他的一个事实；上帝在交给我们这件事实的时候，已经顺便保证了它的结果，所以死是一件不必急于<br>求成的事，死是一个必然会降临的节日。这样想过之看我安心多了，眼前的一切不再那么可怕。比如你<br>起早熬夜准备考试的时候，忽然想起有一个长长的假期在前面等待你，你会不会觉得轻松一点？并且庆<br>幸并且感激这样的安排？剩下的就是怎样活的问题了，这却不是在某一个瞬间就能完全想透的、不是一<br>次性能够解决的事，怕是活多久就要想它多久了，就像是伴你终生的魔鬼或恋人。所以，十五年了，我<br>还是总得到那古园里去、去它的.老树下或荒草边或颓墙旁，去默坐，去呆想、去推开耳边的嘈杂理一<br>理纷乱的思绪，去窥看自己的心魂。</p>
<p>​        十五年中，这古园的形体被不能理解它的人肆意雕琢，幸好有些东西的任谁也不能改变它的。譬如<br>祭坛石门中的落日，寂静的光辉平铺的—刻，地上的每一个坎坷都被映照得灿烂；譬如在园中最为落<br>寞的时间，—群雨燕便出来高歌，把天地都叫喊得苍凉；譬如冬天雪地上孩子的脚印，总让人猜想他<br>们是谁，曾在哪儿做过些什么、然后又都到哪儿去了；譬如那些苍黑的古柏，你忧郁的时候它们镇静地<br>站在那儿，你欣喜的时候它们依然镇静地站在那儿，它们没日没夜地站在那儿从你没有出生一直站到这<br>个世界上又没了你的时候；譬如暴雨骤临园中，激起一阵阵灼烈而清纯的草木和泥土的气味，让人想起<br>无数个夏天的事件；譬如秋风忽至，再有一场早霜，落叶或飘摇歌舞或坦然安卧，满园中播散着熨帖而<br>微苦的味道。味道是最说不清楚的。味道不能写只能闻，要你身临其境去闻才能明了。味道甚至是难于<br>记忆的，只有你又闻到它你才能记起它的全部情感和意蕴。所以我常常要到那园子里去。</p>
<hr>
]]></content>
      <categories>
        <category>文学</category>
      </categories>
      <tags>
        <tag>文学</tag>
      </tags>
  </entry>
  <entry>
    <title>MarkDown使用指南</title>
    <url>/posts/37733/</url>
    <content><![CDATA[<h1 id="欢迎使用Markdown编辑器"><a href="#欢迎使用Markdown编辑器" class="headerlink" title="欢迎使用Markdown编辑器"></a>欢迎使用Markdown编辑器</h1><p>你好！ 这是你第一次使用 <strong>Markdown编辑器</strong> 所展示的欢迎页。如果你想学习如何使用Markdown编辑器, 可以仔细阅读这篇文章，了解一下Markdown的基本语法知识。</p>
<h2 id="新的改变"><a href="#新的改变" class="headerlink" title="新的改变"></a>新的改变</h2><p>我们对Markdown编辑器进行了一些功能拓展与语法支持，除了标准的Markdown编辑器功能，我们增加了如下几点新功能，帮助你用它写博客：</p>
<ol>
<li><strong>全新的界面设计</strong> ，将会带来全新的写作体验；</li>
<li>在创作中心设置你喜爱的代码高亮样式，Markdown <strong>将代码片显示选择的高亮样式</strong> 进行展示；</li>
<li>增加了 <strong>图片拖拽</strong> 功能，你可以将本地的图片直接拖拽到编辑区域直接展示；</li>
<li>全新的 <strong>KaTeX数学公式</strong> 语法；</li>
<li>增加了支持<strong>甘特图的mermaid语法<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="mermaid语法说明
"><a href="http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference">1</a></span></a></sup></strong> 功能；</li>
<li>增加了 <strong>多屏幕编辑</strong> Markdown文章功能；</li>
<li>增加了 <strong>焦点写作模式、预览模式、简洁写作模式、左右区域同步滚轮设置</strong> 等功能，功能按钮位于编辑区域与预览区域中间；</li>
<li>增加了 <strong>检查列表</strong> 功能。</li>
</ol>
<h2 id="功能快捷键"><a href="#功能快捷键" class="headerlink" title="功能快捷键"></a>功能快捷键</h2><p>撤销：<kbd>Ctrl/Command</kbd> + <kbd>Z</kbd><br>重做：<kbd>Ctrl/Command</kbd> + <kbd>Y</kbd><br>加粗：<kbd>Ctrl/Command</kbd> + <kbd>B</kbd><br>斜体：<kbd>Ctrl/Command</kbd> + <kbd>I</kbd><br>标题：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>H</kbd><br>无序列表：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>U</kbd><br>有序列表：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>O</kbd><br>检查列表：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>C</kbd><br>插入代码：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>K</kbd><br>插入链接：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>L</kbd><br>插入图片：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>G</kbd><br>查找：<kbd>Ctrl/Command</kbd> + <kbd>F</kbd><br>替换：<kbd>Ctrl/Command</kbd> + <kbd>G</kbd></p>
<h2 id="合理的创建标题，有助于目录的生成"><a href="#合理的创建标题，有助于目录的生成" class="headerlink" title="合理的创建标题，有助于目录的生成"></a>合理的创建标题，有助于目录的生成</h2><p>直接输入1次<kbd>#</kbd>，并按下<kbd>space</kbd>后，将生成1级标题。<br>输入2次<kbd>#</kbd>，并按下<kbd>space</kbd>后，将生成2级标题。<br>以此类推，我们支持6级标题。有助于使用<code>TOC</code>语法后生成一个完美的目录。</p>
<h2 id="如何改变文本的样式"><a href="#如何改变文本的样式" class="headerlink" title="如何改变文本的样式"></a>如何改变文本的样式</h2><p><em>强调文本</em> <em>强调文本</em></p>
<p><strong>加粗文本</strong> <strong>加粗文本</strong></p>
<p>==标记文本==</p>
<p><del>删除文本</del></p>
<blockquote>
<p>引用文本</p>
</blockquote>
<p>H<del>2</del>O is是液体。</p>
<p>2^10^ 运算结果是 1024.</p>
<h2 id="插入链接与图片"><a href="#插入链接与图片" class="headerlink" title="插入链接与图片"></a>插入链接与图片</h2><p>链接: <a href="https://www.csdn.net/">link</a>.</p>
<p>图片: <img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw" alt="Alt"></p>
<p>带尺寸的图片: ![Alt](<a href="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw">https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw</a> =30x30)</p>
<p>居中的图片: <img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw#pic_center" alt="Alt"></p>
<p>居中并且带尺寸的图片: ![Alt](<a href="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw#pic_center">https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw#pic_center</a> =30x30)</p>
<p>当然，我们为了让用户更加便捷，我们增加了图片拖拽功能。</p>
<h2 id="如何插入一段漂亮的代码片"><a href="#如何插入一段漂亮的代码片" class="headerlink" title="如何插入一段漂亮的代码片"></a>如何插入一段漂亮的代码片</h2><p>去<a href="https://mp.csdn.net/console/configBlog">博客设置</a>页面，选择一款你喜欢的代码片高亮样式，下面展示同样高亮的 <code>代码片</code>.</p>
<div class="hljs code-wrapper"><pre><code class="hljs javascript"><span class="hljs-comment">// An highlighted block</span>
<span class="hljs-keyword">var</span> foo = <span class="hljs-string">&#x27;bar&#x27;</span>;</code></pre></div>

<h2 id="生成一个适合你的列表"><a href="#生成一个适合你的列表" class="headerlink" title="生成一个适合你的列表"></a>生成一个适合你的列表</h2><ul>
<li>项目<ul>
<li>项目<ul>
<li>项目</li>
</ul>
</li>
</ul>
</li>
</ul>
<ol>
<li>项目1</li>
<li>项目2</li>
<li>项目3</li>
</ol>
<ul>
<li><input disabled="" type="checkbox"> 计划任务</li>
<li><input checked="" disabled="" type="checkbox"> 完成任务</li>
</ul>
<h2 id="创建一个表格"><a href="#创建一个表格" class="headerlink" title="创建一个表格"></a>创建一个表格</h2><p>一个简单的表格是这么创建的：</p>
<table>
<thead>
<tr>
<th>项目</th>
<th>Value</th>
</tr>
</thead>
<tbody><tr>
<td>电脑</td>
<td>$1600</td>
</tr>
<tr>
<td>手机</td>
<td>$12</td>
</tr>
<tr>
<td>导管</td>
<td>$1</td>
</tr>
</tbody></table>
<h3 id="设定内容居中、居左、居右"><a href="#设定内容居中、居左、居右" class="headerlink" title="设定内容居中、居左、居右"></a>设定内容居中、居左、居右</h3><p>使用<code>:---------:</code>居中<br>使用<code>:----------</code>居左<br>使用<code>----------:</code>居右</p>
<table>
<thead>
<tr>
<th align="center">第一列</th>
<th align="right">第二列</th>
<th align="left">第三列</th>
</tr>
</thead>
<tbody><tr>
<td align="center">第一列文本居中</td>
<td align="right">第二列文本居右</td>
<td align="left">第三列文本居左</td>
</tr>
</tbody></table>
<h3 id="SmartyPants"><a href="#SmartyPants" class="headerlink" title="SmartyPants"></a>SmartyPants</h3><p>SmartyPants将ASCII标点字符转换为“智能”印刷标点HTML实体。例如：</p>
<table>
<thead>
<tr>
<th>TYPE</th>
<th>ASCII</th>
<th>HTML</th>
</tr>
</thead>
<tbody><tr>
<td>Single backticks</td>
<td><code>&#39;Isn&#39;t this fun?&#39;</code></td>
<td>‘Isn’t this fun?’</td>
</tr>
<tr>
<td>Quotes</td>
<td><code>&quot;Isn&#39;t this fun?&quot;</code></td>
<td>“Isn’t this fun?”</td>
</tr>
<tr>
<td>Dashes</td>
<td><code>-- is en-dash, --- is em-dash</code></td>
<td>– is en-dash, — is em-dash</td>
</tr>
</tbody></table>
<h2 id="创建一个自定义列表"><a href="#创建一个自定义列表" class="headerlink" title="创建一个自定义列表"></a>创建一个自定义列表</h2><dl><dt>Markdown</dt><dd>Text-to-HTML conversion tool</dd></dl><dl><dt>Authors<br>:  John</dt><dd>Luke</dd></dl><h2 id="如何创建一个注脚"><a href="#如何创建一个注脚" class="headerlink" title="如何创建一个注脚"></a>如何创建一个注脚</h2><p>一个具有注脚的文本。<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="注脚的解释
"><a href="https://mermaidjs.github.io/">2</a></span></a></sup></p>
<h2 id="注释也是必不可少的"><a href="#注释也是必不可少的" class="headerlink" title="注释也是必不可少的"></a>注释也是必不可少的</h2><p>Markdown将文本转换为 HTML。</p>
<p>*[HTML]:   超文本标记语言</p>
<h2 id="KaTeX数学公式"><a href="#KaTeX数学公式" class="headerlink" title="KaTeX数学公式"></a>KaTeX数学公式</h2><p>您可以使用渲染LaTeX数学表达式 <a href="https://khan.github.io/KaTeX/">KaTeX</a>:</p>
<p>Gamma公式展示 $\Gamma(n) = (n-1)!\quad\forall<br>n\in\mathbb N$ 是通过欧拉积分</p>
<p>$$<br>\Gamma(z) = \int_0^\infty t^{z-1}e^{-t}dt,.<br>$$</p>
<blockquote>
<p>你可以找到更多关于的信息 <strong>LaTeX</strong> 数学表达式<a href="http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference">here</a>.</p>
</blockquote>
<h2 id="新的甘特图功能，丰富你的文章"><a href="#新的甘特图功能，丰富你的文章" class="headerlink" title="新的甘特图功能，丰富你的文章"></a>新的甘特图功能，丰富你的文章</h2><pre><code class=" mermaid">gantt
        dateFormat  YYYY-MM-DD
        title Adding GANTT diagram functionality to mermaid
        section 现有任务
        已完成               :done,    des1, 2014-01-06,2014-01-08
        进行中               :active,  des2, 2014-01-09, 3d
        计划一               :         des3, after des2, 5d
        计划二               :         des4, after des3, 5d</code></pre>

<ul>
<li>关于 <strong>甘特图</strong> 语法，参考 <a href="https://mermaidjs.github.io/">这儿</a>,</li>
</ul>
<h2 id="UML-图表"><a href="#UML-图表" class="headerlink" title="UML 图表"></a>UML 图表</h2><p>可以使用UML图表进行渲染。 <a href="https://mermaidjs.github.io/">Mermaid</a>. 例如下面产生的一个序列图：</p>
<pre><code class=" mermaid">sequenceDiagram
张三 -&gt;&gt; 李四: 你好！李四, 最近怎么样?
李四--&gt;&gt;王五: 你最近怎么样，王五？
李四--x 张三: 我很好，谢谢!
李四-x 王五: 我很好，谢谢!
Note right of 王五: 李四想了很长时间, 文字太长了&lt;br/&gt;不适合放在一行.

李四--&gt;&gt;张三: 打量着王五...
张三-&gt;&gt;王五: 很好... 王五, 你怎么样?</code></pre>

<p>这将产生一个流程图。:</p>
<pre><code class=" mermaid">graph LR
A[长方形] -- 链接 --&gt; B((圆))
A --&gt; C(圆角长方形)
B --&gt; D&#123;菱形&#125;
C --&gt; D</code></pre>

<ul>
<li>关于 <strong>Mermaid</strong> 语法，参考 <a href="https://mermaidjs.github.io/">这儿</a>,</li>
</ul>
<h2 id="FLowchart流程图"><a href="#FLowchart流程图" class="headerlink" title="FLowchart流程图"></a>FLowchart流程图</h2><p>我们依旧会支持flowchart的流程图：</p>
<pre><code class=" mermaid">flowchat
st=&gt;start: 开始
e=&gt;end: 结束
op=&gt;operation: 我的操作
cond=&gt;condition: 确认？

st-&gt;op-&gt;cond
cond(yes)-&gt;e
cond(no)-&gt;op</code></pre>

<ul>
<li>关于 <strong>Flowchart流程图</strong> 语法，参考 <a href="http://adrai.github.io/flowchart.js/">这儿</a>.</li>
</ul>
<h2 id="导出与导入"><a href="#导出与导入" class="headerlink" title="导出与导入"></a>导出与导入</h2><h3 id="导出"><a href="#导出" class="headerlink" title="导出"></a>导出</h3><p>如果你想尝试使用此编辑器, 你可以在此篇文章任意编辑。当你完成了一篇文章的写作, 在上方工具栏找到 <strong>文章导出</strong> ，生成一个.md文件或者.html文件进行本地保存。</p>
<h3 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h3><p>如果你想加载一篇你写过的.md文件，在上方工具栏可以选择导入功能进行对应扩展名的文件导入，<br>继续你的创作。</p>
<section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://mermaidjs.github.io/">mermaid语法说明</a>
<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span>注脚的解释
<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
      <categories>
        <category>MarkDown文本编辑、测试</category>
      </categories>
      <tags>
        <tag>测试</tag>
      </tags>
  </entry>
  <entry>
    <title>最新Hexo框架在GitHub上搭建个人博客</title>
    <url>/posts/44147/</url>
    <content><![CDATA[<h1 id="最新Hexo框架在GitHub上搭建个人博客"><a href="#最新Hexo框架在GitHub上搭建个人博客" class="headerlink" title="最新Hexo框架在GitHub上搭建个人博客"></a>最新Hexo框架在GitHub上搭建个人博客</h1><h4 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h4><p>​        1.本教程主要讲述个人博客的搭建，不涉及网页界面的个性化配置修改。</p>
<p>​        2.根据GitHub网站的最新调整[2021.9]做出搭建方法的改进。</p>
<p>​        3.欢迎访问我的最新版博客：<a href="http://www.hopedreaming.github.io/">www.Hopedreaming.github.io</a> </p>
<p>​        4.使用github pages服务搭建博客的好处有：</p>
<blockquote>
<div class="hljs code-wrapper"><pre><code class="hljs gams"><span class="hljs-comment">*全是静态文件，访问速度快；</span>
<span class="hljs-comment">*免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；</span>
<span class="hljs-comment">*可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；</span>
<span class="hljs-comment">*数据绝对安全，基于Github的版本管理，想恢复到哪个历史版本都行；</span>
<span class="hljs-comment">*博客内容可以轻松打包、转移、发布到其它平台；</span></code></pre></div>
</blockquote>
<h4 id="二、准备工作"><a href="#二、准备工作" class="headerlink" title="二、准备工作"></a>二、准备工作</h4><p>​        1.GitHub账号</p>
<p>​        2.软件Node.ji、npm及其相关基础知识</p>
<p>​        3.软件Gitfor windows（或者其它git客户端）</p>
<p>​        <strong>本教程使用环境：</strong></p>
<blockquote>
<p>​        *window 10</p>
<p>​        *Node.js  –version v12.16.2</p>
<p>​        *Git version 2.33.0.windows.2</p>
<p>​        *Hexo –version 4.3.0</p>
</blockquote>
<h4 id=""><a href="#" class="headerlink" title=""></a></h4><h4 id="三、注册GitHub账号、创建仓库"><a href="#三、注册GitHub账号、创建仓库" class="headerlink" title="三、注册GitHub账号、创建仓库"></a>三、注册GitHub账号、创建仓库</h4><p>​        1.去GitHub官网注册账号，务必绑定邮箱并且通过邮箱验证</p>
<p>​        2.创建一个命名为：用户名.github.io 的仓库，必须是用户名.github.io，这样以后博客的访问地址就是用户名.github.io。</p>
<h4 id="四、安装软件"><a href="#四、安装软件" class="headerlink" title="四、安装软件"></a>四、安装软件</h4><p>​        1.安装Node.js</p>
<blockquote>
<p>*Node.js 为大多数平台提供了官方的 <a href="https://nodejs.org/en/download/">安装程序</a>。对于中国大陆地区用户，可以前往 <a href="https://npm.taobao.org/mirrors/node">淘宝 Node.js 镜像</a> 下载。</p>
<p>*Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本</p>
</blockquote>
<p>​        2.安装Git for window 客户端</p>
<blockquote>
<p>*去官网下载并安装 <a href="https://git-scm.com/download/win">git</a>.</p>
</blockquote>
<p>​        3.所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo</p>
<h4 id="五、安装Hexo框架、初始化"><a href="#五、安装Hexo框架、初始化" class="headerlink" title="五、安装Hexo框架、初始化"></a>五、安装Hexo框架、初始化</h4><p>​        所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo，具体如下：</p>
<blockquote>
<p><em>在自己的电脑中选一个盘，在盘根目录下创建一个<strong>BLOG</strong>文件夹，进入该文件夹，单机鼠标右键，选择：*<em>Git Base Here</em></em></p>
</blockquote>
<p>​</p>
<blockquote>
<p>*然后就进入了Git软件操作界面，输入以下指令执行Hexo框架的安装：</p>
<div class="hljs code-wrapper"><pre><code class="hljs avrasm">$ npm install -g hexo-<span class="hljs-keyword">cli</span></code></pre></div>
</blockquote>
<blockquote>
<p>*<strong>git软件窗口界面保留不要关闭，后面的操作全在这儿！！！</strong></p>
</blockquote>
<p>​        </p>
<p>​        <strong>初始化Hexo框架：</strong></p>
<blockquote>
<p>*在刚才的BLOG目录下新建一个HEXO文件夹(后续的博客代码文件全在这里)</p>
<p>在Git操作界面 分别执行以下操作做：</p>
<div class="hljs code-wrapper"><pre><code class="hljs awk">$ cd <span class="hljs-regexp">/f/</span>BLOG<span class="hljs-regexp">/hexo/</span>
$ hexo init</code></pre></div>

<p>*Hexo框架会自动下载一些文件到这个目录，包括node_modules，目录结构如下图：</p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/16f9f2abd9734adebbcea24e0cfcfe48.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6I-c6bif6IGU55ufMDAx,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<blockquote>
<p>*<strong>然后分别执行以下指令：</strong></p>
<div class="hljs code-wrapper"><pre><code class="hljs elixir"><span class="hljs-variable">$ </span>hexo g <span class="hljs-comment"># 生成</span>
<span class="hljs-variable">$ </span>hexo s <span class="hljs-comment"># 启动服务</span></code></pre></div>

<p>*执行以上命令之后，hexo就会在public文件夹生成相关html文件，这些文件将来都是要提交到github去的，如下图：<img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlLmxpdXhpYW5hbi5jb20vMjAxNjA4LzIwMTYwODE4XzEyMDcwMF8wMjhfMjQyNi5wbmc" alt="img"></p>
</blockquote>
<h4 id="六、配置SSH-key"><a href="#六、配置SSH-key" class="headerlink" title="六、配置SSH key"></a>六、配置SSH key</h4><p>​        <strong>配置SSH key</strong> 的目的是为了获取你的GitHub权限，因为直接使用用户名和密码太不安全了，所以我们使用ssh key来解决本地和服务器的连接问题。</p>
<div class="hljs code-wrapper"><pre><code class="hljs jboss-cli">$ <span class="hljs-keyword">cd</span> ~<span class="hljs-string">/.</span> ssh <span class="hljs-comment">#检查本机已存在的ssh密钥</span></code></pre></div>

<blockquote>
<p>**如果提示：No such file or directory 说明你是第一次使用git。</p>
</blockquote>
<div class="hljs code-wrapper"><pre><code class="hljs elixir"><span class="hljs-variable">$ </span>ssh-keygen -t rsa -C <span class="hljs-string">&quot;邮件地址&quot;</span> <span class="hljs-comment">#GitHub注册邮箱</span></code></pre></div>

<blockquote>
<p>*然后连续3次回车，最终会生成一个文件在用户目录下，打开用户目录，找到<code>.ssh\id_rsa.pub</code>文件，记事本打开并复制里面的内容，打开你的Github主页，点击你的头像-&gt;进入Settings -&gt; SSH and GPG keys -&gt; New SSH key：[title随便填，SSH key 认真粘贴复制，填好后保存！]</p>
</blockquote>
<p>​<br>​        <strong>测试是否配置成功：</strong></p>
<div class="hljs code-wrapper"><pre><code class="hljs elixir"><span class="hljs-variable">$ </span>ssh -T git<span class="hljs-variable">@github</span>.com <span class="hljs-comment"># 注意邮箱地址不用改</span></code></pre></div>

<p>如果提示<code>Are you sure you want to continue connecting (yes/no)?</code>，输入yes，然后会看到：</p>
<blockquote>
<p><em>Hi 你的用户名! You’ve successfully authenticated, but GitHub does not provide shell access.</em></p>
</blockquote>
<p>看到这个，代表配置成功！！！</p>
<p>​        <strong>此时你还需要配置：邮箱和用户名：</strong></p>
<div class="hljs code-wrapper"><pre><code class="hljs verilog">$ git <span class="hljs-keyword">config</span> --<span class="hljs-keyword">global</span> user<span class="hljs-variable">.name</span> <span class="hljs-string">&quot;liuxianan&quot;</span><span class="hljs-comment">// 你的github用户名，非昵称</span>
$ git <span class="hljs-keyword">config</span> --<span class="hljs-keyword">global</span> user<span class="hljs-variable">.email</span>  <span class="hljs-string">&quot;xxx@qq.com&quot;</span><span class="hljs-comment">// 填写你的github注册邮箱</span></code></pre></div>

<blockquote>
<p>*<strong>期间会弹出一个GitHub窗口让你输入用户名和密码[可能是SSH key]，按照要求输入，千万不能填错！！！！！</strong></p>
</blockquote>
<h4 id="七、修改主题"><a href="#七、修改主题" class="headerlink" title="七、修改主题"></a>七、修改主题</h4><p>​        下载主题，博主用的是Fluid主题，推荐使用</p>
<p>​        <strong>首先下载这个主题：</strong></p>
<div class="hljs code-wrapper"><pre><code class="hljs jboss-cli">$ <span class="hljs-keyword">cd</span> <span class="hljs-string">/f/BLOG/HEXO</span>
$ npm install <span class="hljs-params">--save</span> hexo-theme-fluid</code></pre></div>

<p><img src="https://img-blog.csdnimg.cn/b37e6e266e614cbfbd8d608101f98870.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6I-c6bif6IGU55ufMDAx,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<p>修改HEXO目录下<code>_config.yml</code>文件中的<code>theme: landscape</code>改为<code>theme: fluid，然后重新执行</code>hexo g`来重新生成。</p>
<p>如果出现一些莫名其妙的问题，可以先执行<code>hexo clean</code>来清理一下public的内容，然后再来重新生成和发布。</p>
<h4 id="八、上传博客文件到Github"><a href="#八、上传博客文件到Github" class="headerlink" title="八、上传博客文件到Github"></a>八、上传博客文件到Github</h4><p>​        如果一切都配置好了，<code>hexo d</code>一键就搞定。</p>
<p>​        <strong>首先，<code>ssh key</code>肯定要配置好。</strong></p>
<p>​        <strong>其次，配置<code>_config.yml</code>中有关deploy的部分</strong></p>
<blockquote>
<p>推荐使用Notpad++ 打开修改 .yml文件</p>
</blockquote>
<p>​        <strong>配置前先安装一个插件以防万一：</strong></p>
<div class="hljs code-wrapper"><pre><code class="hljs ada">npm install hexo-deployer-git <span class="hljs-comment">--save</span></code></pre></div>



<p>​        <strong>接下来，配置 heox目录下的<code>_config.yml</code>中有关deploy的部分</strong>：</p>
<p>​            <em>GitHub更新前的写法：</em></p>
<div class="hljs code-wrapper"><pre><code class="hljs dts"><span class="hljs-symbol">deploy:</span>
<span class="hljs-symbol">  type:</span> git
<span class="hljs-symbol">  repository:</span> git@github.com:用户名/用户名.github.io.git
<span class="hljs-symbol">  branch:</span> master</code></pre></div>

<p>​        <em><strong>GitHub更新后的写法，特别关键!!!</strong></em></p>
<div class="hljs code-wrapper"><pre><code class="hljs dts"><span class="hljs-symbol">deploy:</span>
<span class="hljs-symbol">  type:</span> git
<span class="hljs-symbol">  repository:</span> git@github.com:用户名/用户名.github.io.git
<span class="hljs-symbol">  branch:</span> main</code></pre></div>



<p>​        接下来分别执行以下指令，就能把博客部署到GitHub上了：</p>
<div class="hljs code-wrapper"><pre><code class="hljs nginx"><span class="hljs-attribute">hexo</span> c <span class="hljs-comment">#来清理一下public的内容，然后再来重新生成和发布</span>
hexo g <span class="hljs-comment">#生成静态页面至public目录</span>
hexo d <span class="hljs-comment">#部署到GitHub</span></code></pre></div>

<p>​            </p>
<h4 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h4><p>hexo常用指令：</p>
<div class="hljs code-wrapper"><pre><code class="hljs axapta">hexo <span class="hljs-keyword">new</span> <span class="hljs-string">&quot;postName&quot;</span> <span class="hljs-meta">#新建文章</span>
hexo <span class="hljs-keyword">new</span> page <span class="hljs-string">&quot;pageName&quot;</span> <span class="hljs-meta">#新建页面</span>
hexo generate <span class="hljs-meta">#生成静态页面至public目录</span>
hexo <span class="hljs-keyword">server</span> <span class="hljs-meta">#开启预览访问端口（默认端口4000，&#x27;ctrl + c&#x27;关闭server）</span>
hexo deploy <span class="hljs-meta">#部署到GitHub</span>
hexo help  <span class="hljs-meta"># 查看帮助</span>
hexo version  <span class="hljs-meta">#查看Hexo的版本</span></code></pre></div>

<p>缩写：</p>
<div class="hljs code-wrapper"><pre><code class="hljs verilog">hexo n == hexo <span class="hljs-keyword">new</span>
hexo g == hexo <span class="hljs-keyword">generate</span>
hexo s == hexo server
hexo d == hexo deploy</code></pre></div>

<p>组合命令：</p>
<div class="hljs code-wrapper"><pre><code class="hljs nginx"><span class="hljs-attribute">exo</span> s -g <span class="hljs-comment">#生成并本地预览</span>
hexo d -g <span class="hljs-comment">#生成并上传</span></code></pre></div>



<p>l + c’关闭server）<br>hexo deploy #部署到GitHub<br>hexo help  # 查看帮助<br>hexo version  #查看Hexo的版本</p>
<div class="hljs code-wrapper"><pre><code class="hljs">
缩写：
</code></pre></div>
<p>hexo n == hexo new<br>hexo g == hexo generate<br>hexo s == hexo server<br>hexo d == hexo deploy</p>
<div class="hljs code-wrapper"><pre><code class="hljs">
组合命令：
</code></pre></div>
<p>hexo s -g #生成并本地预览<br>hexo d -g #生成并上传</p>
<div class="hljs code-wrapper"><pre><code>&gt; 参考于：[canghe.top/2019/07/10/hexo在GitHub上搭建个人博客/](http://canghe.top/2019/07/10/hexo在GitHub上搭建个人博客/)
&gt; 欢迎大家访问我的博客：www.hufe.top

</code></pre></div>
]]></content>
      <categories>
        <category>HEXO博客搭建</category>
      </categories>
      <tags>
        <tag>HEXO</tag>
      </tags>
  </entry>
</search>
